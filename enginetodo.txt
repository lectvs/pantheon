TODO NOW
- change "camera bounds" -> "camera limit", change "camera world rect" -> "camera world bounds"
- load directly from pyxel file (it's just a zip??)
- load directly from aseprite (https://github.com/kennedy0/aseprite-reader/blob/main/src/aseprite_reader/aseprite_file.py)
- bring in constructs from nano
- global variables for specific classes for easy access (e.g. GAME, MUSIC, STAGE, etc.)
- sort through nano milestones and create a general game todo list

TODO IN SEPARATE BRANCH
- text centered by default
- better particle system (e.g. start at 0 alpha, then go to 1, then back to 0)
- add format functionality to spritetext
- worldobject._layer = undefined -> should mean inherit from parent (currently is set on add)
- world/global "effects" e.g. timescale, camera position, music volume, etc. that only happen while a worldobject is in the world
- modify individual characters on a spritetext
- option to keep children ordered relative to their parent + consistent keep children/parent close in render order
- optimize World.selector.typeAll (quadratic runtime-ish)
- make uislider (engine construct) a UIElement and make it compatible with UIKeyboardSystem
- common gamedata system
- change state by returning string in statemachine's update method
- fix worldSprite and layer.sprite (currently does not factor in upscale)
- experiment with humanize off by default?
- world-specific music and music priority?
- perf improvement opportunity from eliminating getters for delta, physicsGroup, etc.
- custom images in text should not affect line height (option?)
- humanize animation speeds?
- allow escaping spriteText special characters like >> or [[ or ]] etc.
- garbage collector type thing for worlds? (to fix problem of entities updating/rendering after world has been unloaded)
- GCCTextures - garbage-collected, cached - be able to create custom textures without worrying about cleanup
- get spriteText bounds without re-rendering it? (see spritetext TODO)
- investigate webgl context lost when rapidly pausing and unpausing
- update pantheon template
    - update with new engine version
    - default/template menus for pause, options, debug, intro, main


backlog
- repo improvements
    - custom file watcher
    - can we make our own language using babel?
    - hot reload?
- performance
    - use shaders for puff system
- general solution to prevent sprites from jittering relative to camera movement
- asset "repositories" (local, remote?, zip)
    - make game files group-downloadable with https://stuk.github.io/jszip/
- allow BasicTexture to be broken into smaller textures if the size limit is surpassed
- apply filter before texture transformation during render? (rotate, scale, etc.)
- module system revamp
    - revamp module system to work with compound types
    - attach arbitrary "update"/"render" objects to worldobjects (e.g. timers, new module system?)
- supertextures ("detective+hat")
- animation/visual layers
- easier window event integration (onbeforeunload, etc.)
- better WorldAsWorldObject (containers?)
- better world and object management (freeing)
- controller revamp
- full nodejs setup
- camera zoom/rotate?
- vs code tasks?
- look into moving from localstorage to indexeddb: https://web.dev/indexeddb/
- normal-map/lighting
- "window" filters
- boundless textures
    - optimize tilemap editing with boundless textures
- print errors on screen?
- loading messages
- hot reloading again (reload just assets?)
- look into babel transformations
- box model P1s
- generic worldobject scale inherited by children + other inherited traits?
- ability to play the intro/splash screen while loading assets
- sfx randomizer + test on nano (load random sfx, lock in good sfx, reshuffle rest, repeat)
- enhanced glitch effect

bugs
- xephia zoom bug on app (pinch and zoom on black area outside canvas)
