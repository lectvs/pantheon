TODO
- general solution to prevent sprites from jittering relative to camera movement
- preload/load overhaul + get off of pixi's preload system
    - asset "repositories" (local, remote?, zip)
    - asset dependencies?
- performance
    - look into more performant graphics libraries
    - use shaders for puff system
- easier window event integration (onbeforeunload, etc.)
- Network.httpRequest should return some kind of error if the user is not connected to the internet
- fix: Options.updateCallbacks.push(() => Input.init());
- template for new games
- documentation and API cleanup
- rename repo
- games do not work on Opera mobile browser (AAC audio encoding?)



backlog
- allow BasicTexture to be broken into smaller textures if the size limit is surpassed
- apply filter before texture transformation during render? (rotate, scale, etc.)
- module system revamp
    - revamp module system to work with compound types
    - attach arbitrary "update"/"render" objects to worldobjects (e.g. timers, new module system?)
- better ways to move the camera (without needing to call setModeFocus)
- supertextures ("detective+hat")
- animation/visual layers
- better WorldAsWorldObject (containers?)
- better world and object management (freeing)
    - good temporary object system
- controller revamp
- full nodejs setup
- camera zoom/rotate?
- vs code tasks?
- look into moving from localstorage to indexeddb: https://web.dev/indexeddb/
- new paint.net 5.x plugin capabilities: https://boltbait.com/pdn/CodeLab/help/tutorial.php
- normal-map/lighting
- "window" filters
- boundless textures
    - optimize tilemap editing with boundless textures
- better keyboard text input
- print errors on screen?
- report game errors through lambda API?
- loading messages
- make game files group-downloadable with https://stuk.github.io/jszip/