TODO
- theater not a world (for real this time)
    - better slides (for real this time)
- camera zoom/rotate?
- animation revamp (animation/script parity?)
    - squash/stretch/transform/etc actions
- revamp module system to work with compound types
- controller revamp
- easier global width/height
- apply filter before texture transformation during render? (rotate, scale, etc.)
- allow S scripts to be run in non-global worlds (global.script.world? how do we handle cutscenes?)
- revamp menu system, transitions from main menu to game
- custom font characters -> general textures instead?
- vs code tasks?
- fix: Options.updateCallbacks.push(() => Input.init());
- turn screen shake into a shader (to get edge continuation)
- redo kill() ... not flag the object as being dead? how to remove object then re-add it later?
- methods to take a screenshot of the canvas (full-size and 1:1 scale? copy to clipboard?)
- "humanized" option in sound asset definition
- better world and object management (freeing)
- better performance on large spritetexts
- figure out true upper bound for textures
- delete useless bloat
- look into more performant graphics libraries
- preload anything (custom textures, objects, etc) at load time
- attach arbitrary "update"/"render" objects to worldobjects (e.g. timers, new module system?)
- make game files group-downloadable with https://stuk.github.io/jszip/
- improve compile time
- clean up fixed framerate/nonupdate stuff
- integrate debug textures/sfx into the engine?
- yield multiple comma-separated values, yield number to wait, script revamp??
- bounce vs elastic tween

stretch
- documentation and API cleanup
- implement metroid-style transitions
- normal-map/lighting
- "window" filters
- boundless textures
    - optimize tilemap editing with boundless textures
- game initialization logic (in Main?)
- better keyboard text input
- fix initial spaces not counting toward alignment?
- print errors on screen?
- report game errors through lambda API?
- loading messages