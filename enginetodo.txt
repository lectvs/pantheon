TODO
- remake build script in node
    - add LICENSE to build, keep it from bloating src/lectvs/assets/etc
- improve compile time
- integrate debug textures/sfx into the engine?
- preload/load overhaul + get off of pixi's preload system
    - load from zip file?
    - asset dependencies?
- improve spritetext
    - better performance on large spritetexts
    - spritetext tags are technically not assets
    - remove spritetext "style" field for constructor - input individual color/alpha/etc. fields instead
    - specify spritetext typing speed as a tag?
    - custom font characters -> general textures instead?
    - calculate text width/height while not all chars visible
    - fix initial spaces not counting toward alignment?
    - support rainbow text
- script revamp
    - yield multiple comma-separated values, yield number to wait
- why does physicslastx/y exist? can we make a reliable lastx/y or dx/y that works regardless of update order?
- "Failed to detect time of collision between circle and inverted rect", maybe with changing bounds?
- better resolution of copyFromParent and render ordering (polarity inverter bug)
- redo kill() ... not flag the object as being dead? how to remove object then re-add it later?
- turn screen shake into a shader (to get edge continuation)
- fix everyNSeconds and oscillateNSeconds for very low framerates
- animation/visual layers
- ui balancer
    - create better worldbounds/localbounds/visiblescreenbounds system
    - well-defined visual boundaries for every object + better World.Actions.balanceWorldObjects
    - worldobject that centers/anchors its children (useful for UI)
- allow S scripts to be run in non-global worlds (global.script.world? how do we handle cutscenes?)
- general solution to prevent sprites from jittering relative to camera movement
- find true texture limit and re-enable in BasicTexture
- apply filter before texture transformation during render? (rotate, scale, etc.)
- module system revamp
    - revamp module system to work with compound types
    - attach arbitrary "update"/"render" objects to worldobjects (e.g. timers, new module system?)
- performance
    - look into more performant graphics libraries
    - look into pixi gpu usage: https://www.google.com/search?q=pixijs+uses+gpu
    - use shaders for puff system
- debug show overlay with O key doesn't always work. sometimes i need to call Debug.SHOW_OVERLAY=true
- better ways to move the camera (without needing to call setModeFocus)
- supertextures ("detective+hat")
- better WorldAsWorldObject (containers?)
- methods to take a screenshot of the canvas (full-size and 1:1 scale? copy to clipboard?)
- figure out why we lose auto-complete for class methods sometimes
- easier window event integration (onbeforeunload, etc.)
- Network.httpRequest should return some kind of error if the user is not connected to the internet
- better world and object management (freeing)
    - good temporary object system
- controller revamp
- fix: Options.updateCallbacks.push(() => Input.init());
- full nodejs setup
- template for new games
- documentation and API cleanup
- games do not work on Opera mobile browser (AAC audio encoding?)
- camera zoom/rotate?
- vs code tasks?





stretch
- look into moving from localstorage to indexeddb: https://web.dev/indexeddb/
- new paint.net 5.x plugin capabilities: https://boltbait.com/pdn/CodeLab/help/tutorial.php
- normal-map/lighting
- "window" filters
- boundless textures
    - optimize tilemap editing with boundless textures
- better keyboard text input
- print errors on screen?
- report game errors through lambda API?
- loading messages
- make game files group-downloadable with https://stuk.github.io/jszip/